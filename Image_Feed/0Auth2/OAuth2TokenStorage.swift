//
//  OAuth2TokenStorage.swift
//  Image_Feed
//
//  Created by Yura on 09.02.25.
//

import UIKit
import Foundation
import SwiftKeychainWrapper

// MARK: - –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ (Bearer Token) –≤ Keychain
final class OAuth2TokenStorage {
    private let tokenKey = "AuthToken"
    
    var token: String? {
        get {
            print("üîç [OAuth2TokenStorage] –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ Keychain")
            let token = KeychainWrapper.standard.string(forKey: tokenKey)
            print("üîç [OAuth2TokenStorage] –¢–æ–∫–µ–Ω: \(token ?? "nil")")
            return token
        }
        set {
            if let newValue = newValue {
                print("üîÑ [OAuth2TokenStorage] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ Keychain: \(newValue)")
                let success = KeychainWrapper.standard.set(newValue, forKey: tokenKey)
                if !success {
                    print("‚ùå [OAuth2TokenStorage] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤ Keychain")
                }
            } else {
                print("üóëÔ∏è [OAuth2TokenStorage] –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ Keychain")
                let success = KeychainWrapper.standard.removeObject(forKey: tokenKey)
                if !success {
                    print("‚ùå [OAuth2TokenStorage] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∏–∑ Keychain")
                }
            }
        }
    }
}
