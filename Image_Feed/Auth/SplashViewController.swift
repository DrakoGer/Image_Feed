//
//  SplashViewController.swift
//  Image_Feed
//
//  Created by Yura on 17.02.25.
//

import UIKit

final class SplashViewController: UIViewController {
    private let profileService = ProfileService.shared
    private let storage = OAuth2TokenStorage()
    
    private let logoImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = UIImage(named: "splash_screen_logo")
        imageView.translatesAutoresizingMaskIntoConstraints = false
        return imageView
    }()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        checkAuth()
    }
    
    private func setupUI() {
        view.backgroundColor = .black
        view.addSubview(logoImageView)
        
        NSLayoutConstraint.activate([
            logoImageView.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            logoImageView.centerYAnchor.constraint(equalTo: view.centerYAnchor)
        ])
    }
    
    // MARK: - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    private func checkAuth() {
        print("üü¢ [SplashViewController] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        guard let token = storage.token else {
            showAuthViewController()
            return
        }
        fetchProfile(token)
    }
    
    // MARK: - –ù–∞–≤–∏–≥–∞—Ü–∏—è
    private func switchTabBarController() {
        print("üîÑ [SplashViewController] –ü–µ—Ä–µ—Ö–æ–¥ –∫ TabBarController")
        guard let window = UIApplication.shared.windows.first else {
            assertionFailure("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return
        }
        
        let tabBarController = UIStoryboard(name: "Main", bundle: .main)
            .instantiateViewController(withIdentifier: "TabBarViewController")
        
        window.rootViewController = tabBarController
    }
    
    private func showAuthViewController() {
        print("üîÑ [SplashViewController] –ü–µ—Ä–µ—Ö–æ–¥ –∫ AuthViewController")
        let storyboard = UIStoryboard(name: "Main", bundle: .main)
        guard let authViewController = storyboard.instantiateViewController(withIdentifier: "AuthViewController") as? AuthViewController else {
            assertionFailure("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å AuthViewController")
            return
        }
        
        authViewController.delegate = self
        authViewController.modalPresentationStyle = .fullScreen
        present(authViewController, animated: true)
    }
    
    // MARK: - –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
    private func fetchProfile(_ token: String) {
        print("üü¢ [SplashViewController] fetchProfile() –≤—ã–∑–≤–∞–Ω —Å —Ç–æ–∫–µ–Ω–æ–º: \(token)")
        UIBlockingProgressHUD.show()
        
        if let storedToken = storage.token {
            print("üîç [SplashViewController] –¢–æ–∫–µ–Ω –∏–∑ storage: \(storedToken)")
            print("üîç [SplashViewController] –°–æ–≤–ø–∞–¥–∞—é—Ç –ª–∏ —Ç–æ–∫–µ–Ω—ã: \(token == storedToken)")
        } else {
            print("‚ö†Ô∏è [SplashViewController] –¢–æ–∫–µ–Ω –≤ storage –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
        }
        
        profileService.fetchProfile { [weak self] result in
            UIBlockingProgressHUD.dismiss()
            
            guard let self = self else { return }
            
            switch result {
            case .success:
                print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä–∫—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
                if let username = self.profileService.profile?.username {
                    ProfileImageService.shared.fetchProfileImageURL(username: username) { result in
                        switch result {
                        case .success(let image):
                            print("‚úÖ [SplashViewController] –ê–≤–∞—Ç–∞—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: \(image)")
                        case .failure(let error):
                            print("‚ùå [SplashViewController] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏: \(error)")
                        }
                    }
                }
                self.switchTabBarController()
            case .failure(let error):
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: \(error)")
                // TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            }
        }
    }
}

// MARK: - AuthViewControllerDelegate
extension SplashViewController: AuthViewControllerDelegate {
    func didAuthenticate(_ vc: AuthViewController) {
        vc.dismiss(animated: true) { [weak self] in
            guard let self = self, let token = self.storage.token else { return }
            self.fetchProfile(token)
        }
    }
}


//import UIKit
//
//final class SplashViewController: UIViewController {
//    
//    private let profileService = ProfileService.shared
//    private let storage = OAuth2TokenStorage()
//    private let showAuthenticationScreenSegueIdentifier = "showAuthenticationScreen"
//    
//    override func viewDidAppear(_ animated: Bool) {
//        super.viewDidAppear(animated)
//        checkAuth()
//        
//    }
//    // MARK: - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
//    private func checkAuth() {
//        guard let token = storage.token else {  // ‚úÖ –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
//            performSegue(withIdentifier: showAuthenticationScreenSegueIdentifier, sender: nil)
//            return
//        }
//        fetchProfile(token) // ‚úÖ –ü–µ—Ä–µ–¥–∞—ë–º —Ç–æ–∫–µ–Ω –≤ –º–µ—Ç–æ–¥
//    }
//    // MARK: - –ù–∞–≤–∏–≥–∞—Ü–∏—è
//    private func switchTabBarController() {
//        guard let window = UIApplication.shared.windows.first else {
//            assertionFailure("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
//            return
//        }
//        
//        let tabBarController = UIStoryboard(name: "Main", bundle: .main)
//            .instantiateViewController(withIdentifier: "TabBarViewController")
//        
//        window.rootViewController = tabBarController
//    }
//}
//
//// MARK: - –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
//private extension SplashViewController {
//    func fetchProfile(_ token: String) {
//        print("üü¢ [SplashViewController] fetchProfile() –≤—ã–∑–≤–∞–Ω —Å —Ç–æ–∫–µ–Ω–æ–º: \(token)")
//        UIBlockingProgressHUD.show()  // ‚úÖ –ë–ª–æ–∫–∏—Ä—É–µ–º UI, –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª—å
//        
//        
//        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π –ª–æ–≥ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
//        if let storedToken = profileService.storage.token {
//            print("üîç [SplashViewController] –¢–æ–∫–µ–Ω –∏–∑ storage: \(storedToken)")
//            print("üîç [SplashViewController] –°–æ–≤–ø–∞–¥–∞—é—Ç –ª–∏ —Ç–æ–∫–µ–Ω—ã: \(token == storedToken)")
//        } else {
//            print("‚ö†Ô∏è [SplashViewController] –¢–æ–∫–µ–Ω –≤ storage –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
//        }
//        
//        profileService.fetchProfile() { [weak self] result in
//            UIBlockingProgressHUD.dismiss()  // ‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º UI –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
//            
//            guard let self = self else { return }
//            
//            switch result {
//            case .success:
//                print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
//                self.switchTabBarController()  // ‚úÖ –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ TabBarController
//            case .failure(let error):
//                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: \(error)")
//                // TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
//            }
//        }
//    }
//}
//
//extension SplashViewController {
//    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
//        print("üîÑ SplashViewController prepare(for segue:) –≤—ã–∑–≤–∞–Ω")
//        if segue.identifier == showAuthenticationScreenSegueIdentifier {
//            guard let navigationController = segue.destination as? UINavigationController,
//                  let authViewController = navigationController.viewControllers.first as? AuthViewController else {
//                assertionFailure("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ AuthViewController")
//                return
//            }
//            
//            authViewController.delegate = self
//            print("Delegate —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏  –≤ SplashViewController: \(self)")
//            print("–î–µ–ª–µ–≥–∞—Ç AuthViewController: \(String(describing: authViewController.delegate))")
//        } else {
//            super.prepare(for: segue, sender: sender)
//        }
//    }
//}
//
//// MARK: - AuthViewControllerDelegate
//extension SplashViewController: AuthViewControllerDelegate {
//    func didAuthenticate(_ vc: AuthViewController) {
//        vc.dismiss(animated: true) { [weak self] in
//            guard let self = self, let token = self.storage.token else { return }
//            self.fetchProfile(token)  // ‚úÖ –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å, –∑–∞—Ç–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ TabBar
//            
//            // –¢–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä–∫—É
//            if let username = self.profileService.profile?.username {
//                ProfileImageService.shared.fetchProfileImageURL(username: username) { _ in }
//            }
//        }
//    }
//}

