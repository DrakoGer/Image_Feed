//
//  SplashViewController.swift
//  Image_Feed
//
//  Created by Yura on 17.02.25.
//

import UIKit

final class SplashViewController: UIViewController {
    private let profileService = ProfileService.shared
    private let storage = OAuth2TokenStorage()
    
    private let logoImageView: UIImageView = {
        let imageView = UIImageView()
        imageView.image = UIImage(named: "splash_screen_logo")
        imageView.translatesAutoresizingMaskIntoConstraints = false
        return imageView
    }()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        checkAuth()
    }
    
    private func setupUI() {
        view.backgroundColor = #colorLiteral(red: 0.1019607843, green: 0.1058823529, blue: 0.1333333333, alpha: 1)
        view.addSubview(logoImageView)
        
        NSLayoutConstraint.activate([
            logoImageView.centerXAnchor.constraint(equalTo: view.centerXAnchor),
            logoImageView.centerYAnchor.constraint(equalTo: view.centerYAnchor)
        ])
    }
    
    // MARK: - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    private func checkAuth() {
        print("üü¢ [SplashViewController] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        guard let token = storage.token else {
            showAuthViewController()
            return
        }
        fetchProfile(token)
    }
    
    // MARK: - –ù–∞–≤–∏–≥–∞—Ü–∏—è
    private func switchTabBarController() {
        print("üîÑ [SplashViewController] –ü–µ—Ä–µ—Ö–æ–¥ –∫ TabBarController")
        guard let window = UIApplication.shared.windows.first else {
            assertionFailure("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return
        }
        
        let tabBarController = UIStoryboard(name: "Main", bundle: .main)
            .instantiateViewController(withIdentifier: "TabBarViewController")
        
        window.rootViewController = tabBarController
    }
    
    private func showAuthViewController() {
        print("üîÑ [SplashViewController] –ü–µ—Ä–µ—Ö–æ–¥ –∫ AuthViewController")
        let storyboard = UIStoryboard(name: "Main", bundle: .main)
        guard let authViewController = storyboard.instantiateViewController(withIdentifier: "AuthViewController") as? AuthViewController else {
            assertionFailure("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å AuthViewController")
            return
        }
        
        authViewController.delegate = self
        authViewController.modalPresentationStyle = .fullScreen
        present(authViewController, animated: true)
    }
    
    // MARK: - –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
    private func fetchProfile(_ token: String) {
        print("üü¢ [SplashViewController] fetchProfile() –≤—ã–∑–≤–∞–Ω —Å —Ç–æ–∫–µ–Ω–æ–º: \(token)")
        UIBlockingProgressHUD.show()
        
        if let storedToken = storage.token {
            print("üîç [SplashViewController] –¢–æ–∫–µ–Ω –∏–∑ storage: \(storedToken)")
        } else {
            print("‚ö†Ô∏è [SplashViewController] –¢–æ–∫–µ–Ω –≤ storage –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
        }
        
        profileService.fetchProfile { [weak self] result in
            UIBlockingProgressHUD.dismiss()
            
            guard let self = self else { return }
            
            switch result {
            case .success:
                print("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                if let username = self.profileService.profile?.username {
                    ProfileImageService.shared.fetchProfileImageURL(username: username) { result in
                        switch result {
                        case .success(let image):
                            print("‚úÖ [SplashViewController] –ê–≤–∞—Ç–∞—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: \(image)")
                        case .failure(let error):
                            print("‚ùå [SplashViewController] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏: \(error)")
                        }
                    }
                }
                self.switchTabBarController()
            case .failure(let error):
                print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: \(error)")
            }
        }
    }
}

// MARK: - AuthViewControllerDelegate
extension SplashViewController: AuthViewControllerDelegate {
    func didAuthenticate(_ vc: AuthViewController) {
        vc.dismiss(animated: true) { [weak self] in
            guard let self = self, let token = self.storage.token else { return }
            self.fetchProfile(token)
        }
    }
}


